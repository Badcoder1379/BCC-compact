@{
    ViewBag.Title = "Home Page";
}

<!DOCTYPE html>
<html>

<head>

    <TITLE>MMD magnifier</TITLE>

    <!--selecting file styles-->
    <style>
        #files-list {
            font-size: 20px;
            font-family: 'Comic Sans MS';
            color: red;
        }

        #button-compact {
            margin-left: 30px;
            padding-right: 50px;
            padding-left: 50px;
        }

        #button-updateList {
            margin-left: 30px;
            padding-right: 50px;
            padding-left: 50px;
        }

        #compact-range {
            margin-top: 20px;
            background-color: red;
        }
    </style>

    <!--graph container styles-->
    <style>
        #graph-container {
            height: 700px;
            border: 1px solid red;
            width: 100%;
            margin-top: 5px;
            margin-bottom : 5px;
            background-color: whitesmoke;
            border-radius : 7px;
        }
    </style>

    <!--generic styles-->
    <style>
        .button1 {
            color: red;
            text-align: center;
            font-family: 'Comic Sans MS';
            font-size: 20px;
            border: 1px solid red;
            border-radius: 7px;
            background-color: white;
        }

        .button1:hover {
            background-color: red;
            color: white;
        }

        .textInput1 {
            font-size: 15px;
            border: 1px solid red;
            border-radius: 5px;
            color: red;
            font-family: 'Comic Sans MS';
            margin-left: 5px;
            margin-right: 15px;
            background-color: white;
            width: 50px;
            width: 100px;
        }

        .textInput:hover {
            border: 3px solid red;
        }

        .part {
            padding-top: 10px;
            padding-bottom: 10px;
            margin-top: 4px;
            margin-bottom: 4px;
            border: 1px solid red;
            color: red;
            font-size: 15px;
            font-family: 'Comic Sans MS';
            border-radius: 7px;
            background-color: whitesmoke;
            width: 100%;
        }

        .title1 {
            height: 100%;
            width: 100%;
            padding: 10px;
            border: 1px solid red;
            background-color: whitesmoke;
            margin-top: 4px;
            margin-bottom: 4px;
            border-radius: 10px;
            color: red;
            align-content: center;
            font-size: 20px;
            font-family: 'Comic Sans MS';
            text-align-last: center;
        }
    </style>

</head>



<body style="background-color:white">

    <!--title div-->
    <div class="title1">
        <strong>
            MMD graph visualizer
        </strong>
    </div>

    <!--selecting file div-->
    <strong>files list</strong>
    <div class="part">
        <form>
            <input type="button" id="button-updateList" value="update list" onclick="updateList()" class="button1" />
            <input type="button" id="button-closeList" value="close list" onclick="$('#files-list').empty()" class="button1" />
            <ul id='files-list'>
            </ul>
        </form>
    </div>
    <strong>importing files</strong>
    <div class="part">
        <form>
            <strong style="margin-left: 30px;"> input your graph file name : </strong>
            <input type="text" value="fileName" id="text-fileName" class="textInput1" />
            <input type="button" id="button-compact" value="compact" onclick="compact()" class="button1" />
        </form>
    </div>


    <!--graph container div-->
    <strong>graph container</strong>
    <div id="graph-container"></div>

    <!--file editor title div-->
    <div class="title1">
        <strong>
            File editor
        </strong>
    </div>

    <!--file editor div-->
    <strong>making random File</strong>
    <div class="part">
        <form>
            <strong style="margin-left:20px"> number of vertices : </strong>
            <input type="text" value="10" id="verticesCount-input" class="textInput1" ; />
            <strong> number of edges : </strong>
            <input type="text" value="20" id="edgesCount-input" class="textInput1" ; />
            <strong> fileName : </strong>
            <input type="text" ; value="random.txt" id="randomgraph-fileName" class="textInput1" ; />
            <input type="button" id="createRandomgraph-button" value="random graph compact" onclick="randomgraphMake()" class="button1" />
        </form>
    </div>
    <strong>deleting files</strong>
    <div class="part">
        <form>
            <strong style="margin-left:20px"> fileName : </strong>
            <input type="text" value="fileName" id="deleteFileName-input" class="textInput1" ; />
            <input type="button" id="deleteFile-button" value="DELETE" onclick="deleteFile()" class="button1" />
        </form>
    </div>


</body>
</html>
















<script src="~/Scripts/ogma.min.js"></script>

@section scripts{
    <script>
        function compact()
        {
            const queryText = $('#text-fileName').val();
            $.ajax({
                url: '/query/compact',
                method: 'post',
                data: { query: queryText }
            }).done((result) =>
            {
                drawgraph(result);
            });
        }

        function randomgraphMake()
        {

            const v = $('#verticesCount-input').val();
            const e = $('#edgesCount-input').val();
            const fileName = $('#randomgraph-fileName').val();

            var queryText = v + "-" + e + "-" + fileName;
            $.ajax({
                url: '/query/randomgraph',
                method: 'post',
                data: { query: queryText }
            }).done((result) =>
            {
                drawgraph(result);
            });
            updateList();
        }

        function drawgraph(result)
        {
            if (result == "")
            {
                alert("there isn't any graph src by this adress");
                return;
            }
            var g = { nodes: [], edges: [] };
            $.each(result.Locations, (index, value) =>
            {
                g.nodes.push({
                    id: 'n' + index,
                    attributes: {
                        x: value.X,
                        y: value.Y,
                        text: 'N' + index,
                        radius: 10,
                    }
                });
            });
            $.each(result.Edges, (index, value) =>
            {
                g.edges.push({
                    id: 'e' + index,
                    source: 'n' + value.A,
                    target: 'n' + value.B,
                    attributes: {
                        text: 'edge' + index,
                        color: 'red'
                    }
                });
            });
            $('#text').html('');
            var ogma = new Ogma({
                graph: g,
                container: 'graph-container'
            });
        }

        function updateList()
        {
            var text = "";
            $.ajax({
                url: '/query/getFiles',
                method: 'POST',
                data: null,
            }).done((result) =>
            {
                $.each(result, (index, value) =>
                {
                    text += "<li>" + value + "</li>";
                });
                var list = $('#files-list');
                list.html(text);
            });
        }

        function deleteFile()
        {
            var fileName = $('#deleteFileName-input').val();
            $.ajax({
                url: '/query/deleteFile',
                method: 'POST',
                data: fileName,
            }).done((result) =>
            {
                alert(result);
            });
        }
    </script>
}



