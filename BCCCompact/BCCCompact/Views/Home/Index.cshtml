@{
    ViewBag.Title = "Home Page";
}

<!DOCTYPE html>
<html>

<HEAD>
    <SCRIPT LANGUAGE="Javascript">
        document.firstline = "Welcome to this page"

    </SCRIPT>
    <TITLE>load demo</TITLE>
    <style>
        .fullScreenStyle {
            position: center;
            height: 100%;
            width: 100%;
            min-height: 100%;
            min-width: 100%;
            padding: 10px;
            border: 4px solid green;
            background-color: aquamarine;
            margin-top: 10px;
            border-radius: 10px;
        }

        .textInputStyle {
            font-size: 10px;
            border: 2px solid green;
            border-radius: 5px;
            color: darkslateblue;
            font-family: 'Comic Sans MS';
            margin-left: 10px;
            background-color: azure;
        }

        .buttonStyle {
            background-color: darkslateblue;
            color: aquamarine;
            margin-left: 150px;
            text-align: center;
            font-family: 'Comic Sans MS';
            font-size: 15px;
            padding-right: 50px;
            padding-left: 50px;
            border: 3px solid darkblue;
            border-radius: 7px;
        }

        .randomButtonStyle {
            background-color: darkslateblue;
            color: aquamarine;
            text-align: center;
            font-family: 'Comic Sans MS';
            font-size: 15px;
            padding-right: 20px;
            padding-left: 20px;
            border: 3px solid darkblue;
            border-radius: 7px;
        }

        .containerStyle {
            margin-top: 20px;
            background-color: lightcyan;
            border: 1px solid darkslateblue;
            border-radius: 5px;
            height: 700px;
            width: 1200px;
        }

        .textStyle {
            color: darkslateblue;
            font-size: 15px;
            font-family: 'Comic Sans MS';
        }

        .randomTextStyle {
            font-size: 10px;
            border: 2px solid green;
            border-radius: 5px;
            color: darkslateblue;
            font-family: 'Comic Sans MS';
            margin-right: 50px;
            background-color: azure;
        }
    </style>

</HEAD>



<BODY>

    <div class="fullScreenStyle">
        <form>
            <strong style="color :darkslateblue;align-content : center; font-size : 20px; font-family :  'Comic Sans MS';">
                Graph Compacter
            </strong>
            <br />
            <strong style="color : darkslateblue; font-size : 15px; font-family :  'Comic Sans MS';"> input your graph file name : </strong>
            <input type="text" class="textInputStyle" value="test1.txt" id="text" />
            <input type="button" class="buttonStyle" value="compact" onclick="compact()" />
            <br />


            <strong class="textStyle"> number of vertices : </strong>
            <input type="text" class="randomTextStyle" value="10" id="V" />
            <strong class="textStyle"> number of edges : </strong>
            <input type="text" class="randomTextStyle" value="20" id="E" />
            <input type="button" class="randomButtonStyle" value="random graph compact" onclick="randomGraphCompact()" />
            <input type="button" class="randomButtonStyle" value="random graph" onclick="drawRandomGraph()" />

        </form>
    </div>
    <div id="graph-container" class="containerStyle">
        <br />
        <br />
    </div>
</BODY>
</html>

<script src="~/Scripts/ogma.min.js"></script>


@section scripts{
    <script>
        function compact() {
            const queryText = $('#text').val();
            $.ajax({
                url: '/query/compact',
                method: 'post',
                data: { query: queryText }
            }).done((result) => {
                drawGraph(result);
            });
        }
        function randomGraphCompact() {

            const v = $('#V').val();
            const e = $('#E').val();
            var queryText = v + "-" + e;
            $.ajax({
                url: '/query/randomGraph',
                method: 'post',
                data: { query: queryText }
            }).done((result) => {
                drawGraph(result);
            });
        }

        function drawGraph(result) {
            var g = { nodes: [], edges: [] };
            $.each(result.Locations, (index, value) => {
                g.nodes.push({
                    id: 'n' + index,
                    attributes: {
                        x: value.X,
                        y: value.Y,
                        text: 'N' + index,
                        radius: 10
                    }
                });
            });
            $.each(result.Edges, (index, value) => {
                g.edges.push({
                    id: 'e' + index,
                    source: 'n' + value.A,
                    target: 'n' + value.B,
                    attributes: { text: 'edge' + index }
                });
            });
            $('#text').html('');
            var ogma = new Ogma({
                graph: g,
                container: 'graph-container'
            });
        }
    </script>
}







<script>
    function drawRandomGraph() {
        var element = document.getElementById('graph-container');
        var positionInfo = element.getBoundingClientRect();
        var height = positionInfo.height;
        var width = positionInfo.width;
        var v = $('#V').val();
        var e = $('#E').val();
        v = parseInt(v);
        e = parseInt(e);
        function randomGraph(N, E) {
            var g = { nodes: [], edges: [] };
            for (var i = 0; i < N; i++) {
                g.nodes.push({
                    id: 'n' + i,
                    attributes: {
                        x: Math.random() * width,
                        y: Math.random() * height,
                        text: 'n' + i,
                        radius: 100
                    }
                });
            }
            for (var i = 0; i < E; i++) {
                g.edges.push({
                    id: 'e' + i,
                    source: 'n' + (Math.random() * N | 0),
                    target: 'n' + (Math.random() * N | 0),
                    attributes: { text: 'edge' + i }
                });
            }
            return g;
        }
        var g = randomGraph(v, e);
        var ogma = new Ogma({
            graph: g,
            container: 'graph-container'
        });
    }


</script>
